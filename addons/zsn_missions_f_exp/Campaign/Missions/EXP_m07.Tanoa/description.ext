// Campaign common description
#include "\A3\Missions_F_Exp\Campaign\commonDescription.ext"

onRespawnMenu = "\a3\missions_f_exp\campaign\scripts\handlerespawnmenu.sqf";

// per mission configuration of limited respawn tickets (default: 3)
maxRespawnTickets = 3;

class CfgBriefing
{
	class introVideo
	{
		menuItem = "$STR_A3_exp_briefing_CTRGVideo"; 
		file = "\a3\missions_f_exp\video\exp_m07_vin.ogv"; 
		duration = 120; //<-- duration of the video
		subtitles = "\a3\Missions_F_Exp\Campaign\Briefings\EXP_m07_briefing.sqf"; //<-- file with subtitles to execute
	};
	separator = "______________________"; //<-- separator between the rest of the menu and video and graphics footer (optional)
};

// Mission specific
dev = "Nelson Duarte";
briefingName = $STR_A3_exp_m07_missionname;
onLoadName = $STR_A3_exp_m07_missionname;
onLoadMission = $STR_A3_exp_m07_missionoverview;
overviewText = $STR_A3_exp_m07_missionoverview;
overviewPicture = "a3\missions_f_exp\data\img\exp_m07_overview_co.paa";

// Disable framework respawn
enablePlayerAddRespawn = 0;

doneKeys[] = {"BIS_EXP_m07.Tanoa_done"};

class CfgFunctions
{
	class BIS
	{
		class coop_m07
		{
			class getBossIntel 				{ file = "functions\fn_getBossIntel.sqf"; };
			class onIntelTriggerEntered 	{ file = "functions\fn_onIntelTriggerEntered.sqf"; };
			class onGunnerKilled 			{ file = "functions\fn_onGunnerKilled.sqf"; };
			class onGroupUnitKilled 		{ file = "functions\fn_onGroupUnitKilled.sqf"; };
			class onGroupNeedsHelp		 	{ file = "functions\fn_onGroupNeedsHelp.sqf"; };
			class playFinalVideo			{ file = "functions\fn_playFinalVideo.sqf"; };
			class portLights				{ file = "functions\fn_portLights.sqf"; };
			class unlockAchievements		{ file = "functions\fn_unlockAchievements.sqf"; };
			
			class EXP_m07_addRespawn				{ file = "functions\ending\fn_EXP_m07_addRespawn.sqf"; };
			class EXP_m07_boardHeli					{ file = "functions\ending\fn_EXP_m07_boardHeli.sqf"; };
			class EXP_m07_defend					{ file = "functions\ending\fn_EXP_m07_defend.sqf"; };
			class EXP_m07_destroyGenerator			{ file = "functions\ending\fn_EXP_m07_destroyGenerator.sqf"; };
			class EXP_m07_earthquakes				{ file = "functions\ending\fn_EXP_m07_earthquakes.fsm"; ext = ".fsm"; };
			class EXP_m07_endingClient				{ file = "functions\ending\fn_EXP_m07_endingClient.sqf"; };
			class EXP_m07_endingServer				{ file = "functions\ending\fn_EXP_m07_endingServer.sqf"; };
			class EXP_m07_finaleApproach			{ file = "functions\ending\fn_EXP_m07_finaleApproach.fsm"; ext = ".fsm"; };
			class EXP_m07_finaleDefense				{ file = "functions\ending\fn_EXP_m07_finaleDefense.fsm"; ext = ".fsm"; };
			class EXP_m07_forceRespawn				{ file = "functions\ending\fn_EXP_m07_forceRespawn.sqf"; };
			class EXP_m07_handleIFF					{ file = "functions\ending\fn_EXP_m07_handleIFF.sqf"; };
			class EXP_m07_handleRespawn				{ file = "functions\ending\fn_EXP_m07_handleRespawn.sqf"; };
			class EXP_m07_playMusic 				{ file = "functions\ending\fn_EXP_m07_playMusic.sqf"; };
			class EXP_m07_sendExtract 				{ file = "functions\ending\fn_EXP_m07_sendExtract.sqf"; };
			class EXP_m07_sendFalcon				{ file = "functions\ending\fn_EXP_m07_sendFalcon.sqf"; };
			class EXP_m07_sendLSVs					{ file = "functions\ending\fn_EXP_m07_sendLSVs.sqf"; };
			class EXP_m07_sendMiller				{ file = "functions\ending\fn_EXP_m07_sendMiller.sqf"; };
			class EXP_m07_sendReinf					{ file = "functions\ending\fn_EXP_m07_sendReinf.sqf"; };
			class EXP_m07_sendVTOLs					{ file = "functions\ending\fn_EXP_m07_sendVTOLs.sqf"; };
			class EXP_m07_setFog					{ file = "functions\ending\fn_EXP_m07_setFog.sqf"; };
			class EXP_m07_suppress					{ file = "functions\ending\fn_EXP_m07_suppress.sqf"; };
			class EXP_m07_viperGround				{ file = "functions\ending\fn_EXP_m07_viperGround.fsm"; ext = ".fsm"; };
			class EXP_m07_viperRoof					{ file = "functions\ending\fn_EXP_m07_viperRoof.sqf"; };
		};
	};
};

class CfgDebriefing
{
	class END1
	{
		description = $STR_A3_exp_m07_end01;
		showScore = 0;
	};
};

corpseManagerMode = 1; 					// Type of removed bodies: 0 - none, 1 - all, 2 - only respawnable, 3 - only non-respawnable
corpseLimit = 10; 						// Max number of bodies which can be available at the same time. When exceeded, start deleting immediately.
corpseRemovalMinTime = 120; 			// Minimal time in seconds a body stays in the scene (can't be removed sooner).
corpseRemovalMaxTime = 240; 			// Maximal time in seconds after which a dead body is removed (can't stay longer)

wreckManagerMode = 1; 					// Type of removed wrecks: 0 - none, 1 - all, 2 - only respawnable, 3 - only non-respawnable
wreckLimit = 5; 						// Max number of wrecks which can be available at the same time. When exceeded, start deleting immediately.
wreckRemovalMinTime = 120; 				// Minimal time in seconds a wreck stays in the scene (can't be removed sooner).
wreckRemovalMaxTime = 240; 				// Maximal time in seconds after which a wreck is removed (can't stay longer)